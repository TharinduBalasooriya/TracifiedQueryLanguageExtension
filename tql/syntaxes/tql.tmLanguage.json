{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "TQL",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"match": "(\\$)[a-zA-Z_]\\w*",
			"name": "variable.other.readwrite.global.tql"
		},
		{
			"match": "(\\\\\\\\)[n]",
			"name":"constant.character.tql"
		},
		{
			
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			
			"match": "(\\[)[^\\]]*(\\])",
			"name": "text.bracketed"
		
		},
		{
			
			"match": "\\b\\d+\\b",
			"name": "constant.numeric.tql"
		}
		
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.tql"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.tql"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-dash.tql"
						}
					]
				},
				{
					"begin": "(^[ \\t]+)?(?=#)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.tql"
						}
					},
					"end": "(?!\\G)",
					"patterns": []
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.tql"
						}
					},
					"end": "\\*/",
					"name": "comment.block.c"
				}
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.tql",
				"match": "\\b(Item|Function|EndFunction|If|IfNot|EndIf|While|Do|ARG|RET|Break|Continue|LeftSibling|RightSibling|Parent|FirstChild|Children|ChildCount|GetValue|GetLValue|GetRValue|GetCustomString|GetId|GetType|GetNature|GetWeight|GetMinimumChildWeight|GetMaximumChildWeight|SetWeight|SetMaximumChildWeight|SetMinimumChildWeight|SetMinimumChildWeight|SetCustomString|SetNature|SetType|SetRValue|SetLValue|SetValue|AddPostFix|AddPrefix|IsHavingRightSubstring|IsHavingLeftSubstring|IsHavingSubstring|IsStringMemberOf|IsStringEqualTo|GetChildOfType|IsValue|IsType|GetSubtree|GetAggregatedValue|ReadFromFile|FilterSubtree|AddNodeWithWeight|AddNode|Expand|IsNotNull|IsNull|GetCurrentElement|SeekToEnd|SeekToBegin|Seek|GroupSequenceBy|GroupBy|Filter|GetItemCount|ToString|IsGreaterThanOrEqualTo|IsGreaterThan|IsLessThanOrEqualTo|IsLessThan|IsIntMemberOf|IsIntEqualTo|GetLength|WriteToFile|TrimRight|TrimLeft|SEQUENCE|Ignore_Empty_Lines|Number_Format_Is_European|IGNORE_TEXT_BLOCK|SetEntityObject|GetEntityObject|SecondsToMonths|SecondsToDays|SecondsToYears|GetDifferenceByString|StringToReadableDateTime|DateNow|StringToUnixTime|GetNextElement|CheckNotNull|GetUniqueNodeListWithCount|StringToInteger|GetStringVar|GetIntegerVar|StringToBoolean|GetComma|GetBooleanVar|SetBoolean|ToFalse|ToTrue|NextSibling|SortNodeList|ExtractNodeListTop|GetCustomObj|ConvertToSentenceCase|GetDayOfTheWeekShortString|GetDayString|GetMonthShortString|GetTime24HourFormat|GetYear|GetOldestDate|GetLatestDate|AddPeriod|GetUniqueNodeListWithNodeRef|SetInteger|QueryProfileAndTDPs|GetNodeObj|AbsoluteValue|QueryReviewsByProfileIds|StringToUnixTime2|QueryReviewsByIdentifiers|Percentage|Average)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.tql",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tql",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.tql"
}